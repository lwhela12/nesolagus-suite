services:
  postgres:
    image: postgres:15-alpine
    container_name: ghac_postgres
    environment:
      POSTGRES_USER: ghac_user
      POSTGRES_PASSWORD: ghac_password
      POSTGRES_DB: ghac_survey
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/src/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ghac_user -d ghac_survey"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: ghac_redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: ghac_backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://ghac_user:ghac_password@postgres:5432/ghac_survey
      REDIS_URL: redis://redis:6379
      JWT_SECRET: development_secret_change_in_production
      PORT: 4001
      CORS_ORIGIN: http://localhost:4000
    ports:
      - "4001:4001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: npm run dev

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: ghac_frontend
    environment:
      REACT_APP_API_URL: http://localhost:4001
    ports:
      - "4000:5173"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: npm start

volumes:
  postgres_data:
  redis_data: